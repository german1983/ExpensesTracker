// <auto-generated />
using System;
using ExpensesTracker.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExpensesTracker.API.Data.Migrations
{
    [DbContext(typeof(ExpensesDbContext))]
    partial class ExpensesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExpensesTracker.API.Data.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdentityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdentityId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("ExpensesTracker.API.Data.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ExpensesTracker.API.Data.Models.Concept", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Concepts");
                });

            modelBuilder.Entity("ExpensesTracker.API.Data.Models.Currency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("ExpensesTracker.API.Data.Models.Institution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Institutions");
                });

            modelBuilder.Entity("ExpensesTracker.API.Data.Models.InstitutionBranch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InstitutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionId");

                    b.ToTable("InstitutionBranches");
                });

            modelBuilder.Entity("ExpensesTracker.API.Data.Models.Operation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdentityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InstitutionBranchId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdentityId");

                    b.HasIndex("InstitutionBranchId");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("ExpensesTracker.API.Data.Models.OperationDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<Guid>("ConceptId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OperationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ConceptId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("OperationId");

                    b.ToTable("OperationDetails");
                });

            modelBuilder.Entity("ExpensesTracker.API.Data.Models.OperationMovement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<Guid>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OperationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("OperationId");

                    b.ToTable("OperationMovements");
                });

            modelBuilder.Entity("ExpensesTracker.API.Data.Models.UserCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdentityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("UserCategories");
                });

            modelBuilder.Entity("ExpensesTracker.API.Data.Models.UserConcept", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConceptId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdentityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ConceptId");

                    b.ToTable("UserConcepts");
                });

            modelBuilder.Entity("ExpensesTracker.API.Data.Models.UserInstitution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdentityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InstitutionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionId");

                    b.ToTable("UserInstitutions");
                });

            modelBuilder.Entity("ExpensesTracker.API.Data.Models.UserInstitutionBranch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdentityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InstitutionBranchId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionBranchId");

                    b.ToTable("UserInstitutionBranches");
                });

            modelBuilder.Entity("ExpensesTracker.API.Data.Models.Category", b =>
                {
                    b.HasOne("ExpensesTracker.API.Data.Models.Category", "ParentCategory")
                        .WithMany("ChildrenCategories")
                        .HasForeignKey("ParentCategoryId");
                });

            modelBuilder.Entity("ExpensesTracker.API.Data.Models.Concept", b =>
                {
                    b.HasOne("ExpensesTracker.API.Data.Models.Category", "Category")
                        .WithMany("Concepts")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Category_Concepts")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExpensesTracker.API.Data.Models.InstitutionBranch", b =>
                {
                    b.HasOne("ExpensesTracker.API.Data.Models.Institution", "Institution")
                        .WithMany("InstitutionBranches")
                        .HasForeignKey("InstitutionId")
                        .HasConstraintName("FK_Institution_InstitutionBranches")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExpensesTracker.API.Data.Models.Operation", b =>
                {
                    b.HasOne("ExpensesTracker.API.Data.Models.InstitutionBranch", "InstitutionBranch")
                        .WithMany("Operations")
                        .HasForeignKey("InstitutionBranchId")
                        .HasConstraintName("FK_Institution_Operations")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExpensesTracker.API.Data.Models.OperationDetail", b =>
                {
                    b.HasOne("ExpensesTracker.API.Data.Models.Concept", "Concept")
                        .WithMany("OperationDetails")
                        .HasForeignKey("ConceptId")
                        .HasConstraintName("FK_Category_OperationDetails")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpensesTracker.API.Data.Models.Currency", "Currency")
                        .WithMany("OperationDetails")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Currency_OperationDetails")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpensesTracker.API.Data.Models.Operation", "Operation")
                        .WithMany("OperationDetails")
                        .HasForeignKey("OperationId")
                        .HasConstraintName("FK_Operation_OperationDetails")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExpensesTracker.API.Data.Models.OperationMovement", b =>
                {
                    b.HasOne("ExpensesTracker.API.Data.Models.Account", "Account")
                        .WithMany("OperationMovements")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Account_OperationMovements")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpensesTracker.API.Data.Models.Currency", "Currency")
                        .WithMany("OperationMovements")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Currency_OperationMovements")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpensesTracker.API.Data.Models.Operation", "Operation")
                        .WithMany("OperationMovements")
                        .HasForeignKey("OperationId")
                        .HasConstraintName("FK_Operation_OperationMovements")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExpensesTracker.API.Data.Models.UserCategory", b =>
                {
                    b.HasOne("ExpensesTracker.API.Data.Models.Category", "Category")
                        .WithMany("UserCategories")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Category_UserCategories")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExpensesTracker.API.Data.Models.UserConcept", b =>
                {
                    b.HasOne("ExpensesTracker.API.Data.Models.Concept", "Concept")
                        .WithMany("UserConcepts")
                        .HasForeignKey("ConceptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExpensesTracker.API.Data.Models.UserInstitution", b =>
                {
                    b.HasOne("ExpensesTracker.API.Data.Models.Institution", "Institution")
                        .WithMany("UserInstitutions")
                        .HasForeignKey("InstitutionId")
                        .HasConstraintName("FK_Institution_UserInstitutions")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExpensesTracker.API.Data.Models.UserInstitutionBranch", b =>
                {
                    b.HasOne("ExpensesTracker.API.Data.Models.InstitutionBranch", "InstitutionBranch")
                        .WithMany("UserInstitutionBranches")
                        .HasForeignKey("InstitutionBranchId")
                        .HasConstraintName("FK_InstitutionBranch_UserInstitutionBranches")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
